---
title: "PGC Internship 2024: R Team - 2nd Progress Report"
author: "[Mentor] Mark Joseph Garrovillas, RCh, Tyrone Mariano, Leda Celeste Samin"
date: last-modified
institution: "Core Facility for Bioinformatics"
format: 
  revealjs:
    date-format: long
    slide-number: c/t
    width: 1920
    height: 1080
    theme: custom.scss
    navigation-mode: vertical
    controls-layout: bottom-right
    controls-tutorial: true
    preview-links: auto
    slide-level: 3
    multiplex: true
    chalkboard: 
      boardmarker-width: 5
    search:
    transition: slide
    background-transition: fade
    transition-speed: slow
title-slide-attributes:
      data-background: progress-rep03_files/img/title-slide.png
      data-background-size: cover
      data-background-color: "#000"
      transition: slide
      background-transition: fade
      transition-speed: slow
---

# PROJECT RECAP {data-background="progress-rep03_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}

Develop and implement the bioinformatics functions, tools, widgets, or pipelines
1. Deploy the RStudio, Shiny, and OpenCPU servers using Docker
  - Easy development and access: OpenCPU, Shiny, & R Studio can be accessed by the user in their browser using Docker
  - Application deployment: From git, an isolated standalone application can be started via Docker
2. Expose as a stateless microservice using RESTful API and RPC the major steps in the scRNAseq pipeline and their visualizations
3. Develop an interactive dashboard/reactive framework in Shiny for the scRNA pipeline

## Using the Seurat scRNAseq preprocessing pipeline and visualize the data in lower dimensions (t-SNE) {data-background="progress-rep03_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

```{r setup, echo=F}
library(Seurat)
library(tidyverse)
library(shiny)
library(DT)
library(crosstalk)
library(plotly)

pbmc <- readRDS("~/Desktop/pgc-dim-red/presentations/progress-report_03/progress-rep03_files/data/pbmc_tutorial.rds")
pbmc <- RunTSNE(pbmc, dims = 1:10, dim.embed = 3)

# Extract tSNE information from Seurat Object
tsne_1 <- pbmc[["tsne"]]@cell.embeddings[,1]
tsne_2 <- pbmc[["tsne"]]@cell.embeddings[,2]
tsne_3 <- pbmc[["tsne"]]@cell.embeddings[,3]

# Prepare a dataframe for cell plotting
plot.data <- FetchData(object = pbmc, vars = c("tSNE_1", "tSNE_2", "tSNE_3", "seurat_clusters"))

# Make a column of row name identities (these will be your cell/barcode names)
plot.data$label <- paste(rownames(plot.data))

plot <- plot_ly(data = plot.data, x = ~tSNE_1, y = ~tSNE_2, z = ~tSNE_3, 
                color = ~seurat_clusters,
                type = "scatter3d",
                mode = "markers",
                marker = list(size = 5, width=2), # controls size of points
                text=~label, #This is that extra column we made earlier for which we will use 
                hoverinfo="text") #When you visualize your plotly object, hovering your mouse pointer over a point shows cell names

plot <- plot %>% layout(width = "100%", height = 500)

plot
```

## Using the Seurat scRNAseq preprocessing pipeline and visualize the data in lower dimensions (UMAP) {data-background="progress-rep03_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}


## Questions that were posed during the previous presentation{data-background="progress-rep03_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

-   Are we going to use Docker for containerizing the customized package or the Shiny app?

# ACCOMPLISHMENTS {data-background="progress-rep03_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}

## Successful deployment of RStudio, Shiny, and OpenCPU servers using Docker {data-background="progress-rep03_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}
![]("progress-rep03_files/img/runningimages.png"){.fragment fig-align="center" height=50% width=50%}

## Access to servers via Docker {data-background="progress-rep03_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}
![Access to RStudio]("progress-rep03_files/img/rstudioserver.png"){.fragment fig-align="center" height=50% width=50%}

## Access to servers via Docker {data-background="progress-rep03_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}
![Access to OpenCPU]("progress-rep03_files/img/opencpuweb.png"){.fragment fig-align="center" height=50% width=50%}

# RPC major steps in scRNAseq pipeline via OpenCPU using Docker: Running the pipeline {data-background="progress-rep03_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}
![Overview of the scRNAseq preprocessing pipeline]("progress-rep03_files/img/overviewpipeline.png"){.fragment fig-align="center" height=50% width=50%}

## RPC major steps in scRNAseq pipeline via OpenCPU using Docker {data-background="progress-rep03_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}
![1: Creating the Seurat Object]("progress-rep03_files/img/createseuratobject.png"){.fragment fig-align="center" height=50% width=50%}

## RPC major steps in scRNAseq pipeline via OpenCPU using Docker {data-background="progress-rep03_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}
![1: Creating the Seurat Object]("progress-rep03_files/img/create_output.png"){.fragment fig-align="center" height=50% width=50%}

## RPC major steps in scRNAseq pipeline via OpenCPU using Docker {data-background="progress-rep03_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}
![2: Quality Control]("progress-rep03_files/img/qualitycontrol.png"){.fragment fig-align="center" height=50% width=50%}

## RPC major steps in scRNAseq pipeline via OpenCPU using Docker {data-background="progress-rep03_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}
![2: Quality Control]("progress-rep03_files/img/qc_output.png"){.fragment fig-align="center" height=50% width=50%}

## RPC major steps in scRNAseq pipeline via OpenCPU using Docker {data-background="progress-rep03_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}
![5: PCA]("progress-rep03_files/img/pca.png"){.fragment fig-align="center" height=50% width=50%}

## RPC major steps in scRNAseq pipeline via OpenCPU using Docker {data-background="progress-rep03_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}
![5: PCA]("progress-rep03_files/img/pca_output.png"){.fragment fig-align="center" height=50% width=50%}

## RPC major steps in scRNAseq pipeline via OpenCPU using Docker {data-background="progress-rep03_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}
![6: T-SNE]("progress-rep03_files/img/tsne.png"){.fragment fig-align="center" height=50% width=50%}

## RPC major steps in scRNAseq pipeline via OpenCPU using Docker {data-background="progress-rep03_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}
![6: T-SNE]("progress-rep03_files/img/tsne_output.png"){.fragment fig-align="center" height=50% width=50%}

# CHALLENGES {data-background="progress-rep03_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}

- Challenges in writing and troubleshooting scripts
- Familiarization with Docker via "doing" which included a lot of mistakes

# FOR NEXT WEEK {data-background="progress-rep03_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}

- Develop more descriptive package and function names
- Improve the script functionality
- Create API documentation
- Deploy Shiny servers via Docker

# REFERENCES {data-background="progress-rep03_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}

## REFERENCES {data-background="progress-rep03_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

-   Journal Articles:

    -   <https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9148156/>

-   Web Articles:

    -   <https://pmirla.github.io/archive/opencpu/index.html>
    -   \<https://www.bioconductor.org/packages/release/workflows/vignettes/sequencing/inst/doc/sequencing.htm

# Thank You! {data-background="progress-rep03_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}
